{"version":3,"sources":["webpack:///./src/app/layout/tables/tables-routing.module.ts","webpack:///./src/app/layout/tables/tables.component.html","webpack:///./src/app/layout/tables/tables.component.scss","webpack:///./src/app/layout/tables/tables.component.ts","webpack:///./src/app/layout/tables/tables.module.ts"],"names":[],"mappings":"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","file":"tables-tables-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TablesComponent } from './tables.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TablesComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TablesRoutingModule {}\n","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Ticket MÃ©dio Individual </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> R$ {{row.progress}} </td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n        </ng-container>\\n\\n        <!-- Color Column -->\\n        <ng-container matColumnDef=\\\"color\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Detalhes </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">  </td>\\n            <!-- {{row.color}} -->\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\"","import { map } from 'rxjs/operators';\nimport { EventService } from './../event/event-service/event.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'app-tables',\n    templateUrl: './tables.component.html',\n    styleUrls: ['./tables.component.scss']\n})\nexport class TablesComponent implements OnInit {\n    displayedColumns = ['id', 'name', 'progress', 'color'];\n    dataSource: MatTableDataSource<UserData>;\n    clientData: any;\n    usuarios = [];\n\n@ViewChild(MatPaginator) paginator: MatPaginator;\n@ViewChild(MatSort) sort: MatSort;\n\nconstructor(private eventService: EventService) {\n    // Create 100 users\n    const users: UserData[] = [];\n    for (let i = 1; i <= 100; i++) {\n        users.push(createNewUser(i));\n    }\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n\n}\n\nngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.eventService.getClients().subscribe(data => {\n        console.log('retorno clientes', data);\n        data.results.map(x => {\n            this.usuarios.push(x);\n        });\n    });\n}\n\napplyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n    }\n}\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = [\n    // 'maroon',\n    // 'red',\n    // 'orange',\n    // 'yellow',\n    // 'olive',\n    // 'green',\n    // 'purple',\n    // 'fuchsia',\n    // 'lime',\n    // 'teal',\n    // 'aqua',\n    // 'blue',\n    // 'navy',\n    // 'black',\n    // 'gray'\n];\nconst NAMES = [\n    'Maia',\n    'Asher',\n    'Olivia',\n    'Atticus',\n    'Amelia',\n    'Jack',\n    'Charlotte',\n    'Theodore',\n    'Isla',\n    'Oliver',\n    'Isabella',\n    'Jasper',\n    'Cora',\n    'Levi',\n    'Violet',\n    'Arthur',\n    'Mia',\n    'Thomas',\n    'Elizabeth'\n];\n\nexport interface UserData {\n    id: string;\n    name: string;\n    progress: string;\n    color: string;\n}\n\nexport class UserShopping {\n    name: string;\n    ddd: number;\n    tel: string;\n    sexo: string;\n\n    constructor(name, ddd, tel, sexo) {\n        this.name = name;\n        this.ddd = ddd;\n        this.tel = tel;\n        this.sexo = sexo;\n    }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n        ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n        '.';\n\n    return {\n        id: id.toString(),\n        name: name,\n        progress: Math.round(Math.random() * 100000).toString(),\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule, MatIconModule } from '@angular/material';\nimport { MatFormFieldModule, MatPaginatorModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\n\nimport { TablesRoutingModule } from './tables-routing.module';\nimport { TablesComponent } from './tables.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TablesRoutingModule,\n        MatTableModule,\n        MatFormFieldModule,\n        MatPaginatorModule,\n        MatInputModule,\n        MatIconModule\n    ],\n    declarations: [TablesComponent]\n})\nexport class TablesModule {}\n"],"sourceRoot":""}